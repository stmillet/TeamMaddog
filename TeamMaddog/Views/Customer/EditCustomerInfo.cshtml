@model TeamMaddog.Models.Customer

@{
    ViewBag.Title = "EditCustomerInfo";
}
<!--Just like the adding customers Page, but here you can edit the customer information-->
<h2>Edit Customer Information</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Customer</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Customer_Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Customer_Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Customer_Code, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--Change First name -->
        <div class="form-group">
            @Html.LabelFor(model => model.Customer_FName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Customer_FName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Customer_FName, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--Change last name-->
        <div class="form-group">
            @Html.LabelFor(model => model.Customer_LName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Customer_LName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Customer_LName, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--Change email -->
        <div class="form-group">
            @Html.LabelFor(model => model.Customer_Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Customer_Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Customer_Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--Change address -->
        <div class="form-group">
            @Html.LabelFor(model => model.Cust_Street_Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cust_Street_Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cust_Street_Address, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--Change city -->
        <div class="form-group">
            @Html.LabelFor(model => model.Cust_City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cust_City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cust_City, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--Change state -->
        <div class="form-group">
            @Html.LabelFor(model => model.Cust_State, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cust_State, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cust_State, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--Change zip-->
        <div class="form-group">
            @Html.LabelFor(model => model.Cust_Zip, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cust_Zip, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cust_Zip, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<!--takes you back to the list of customers and their information-->
<div>
    @Html.ActionLink("Back to List", "ShowCustomerInfo")
</div>
